name: Tests

on:
  push:
    branches:
      - 'main'
    tags: [ '*' ]
  pull_request:
    branches:
      - 'main'

jobs:
  tests:
    strategy:
      max-parallel: 7
      matrix:
        os:
          - ubuntu-22.04
        python-version:
          - '3.10'
          - '3.11'
          - '3.12'
          - '3.13'
        include:
          - os: ubuntu-22.04
            python-version: '3.9'
            coverage: false
            lint: true

    runs-on: ${{ matrix.os }}

    steps:
      - name: Prepare
        if: ${{ matrix.prepare }}
        run: ${{ matrix.prepare }}
      - uses: actions/checkout@v4.2.2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.3.0
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          pip install -U hatch
      - name: ruff
        if: ${{ matrix.lint }}
        run: |
          hatch run lint:style aioworkers_kafka tests
      - name: mypy
        if: ${{ matrix.lint }}
        run: |
          hatch run lint:mypy aioworkers_kafka tests
      - name: Run Kafka KRaft Broker
        uses: spicyparrot/kafka-kraft-action@v1.1.3
        with:
          kafka-version: "3.6.1"
          kafka-topics: "test,1"
      - name: Tests with coverage
        env:
          KAFKA_BOOTSTRAP_SERVERS: ${{ env.kafka_runner_address }}:9093
          KAFKA_TOPIC: test
        run: |
          hatch run cov
      - name: coverage.xml
        if: ${{ matrix.coverage }}
        run: |
          hatch run coverage xml
      - name: Upload coverage to Codecov
        if: ${{ matrix.coverage && github.ref == 'refs/heads/main' }}
        uses: codecov/codecov-action@v5.2.0
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage.xml
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: true
